env:
  browser: true
  es2021: true
extends: [
  "plugin:@typescript-eslint/recommended",
  "plugin:@typescript-eslint/recommended-requiring-type-checking",
]
overrides: [{
  files: ["*.ts", "*.tsx"],
  excludedFiles: "*.test.js",
}]
root: true
parserOptions:
  ecmaVersion: latest
  sourceType: module
  project: ./tsconfig.json
rules:
  dot-notation: warn
  no-extra-semi: warn
  no-extra-boolean-cast: off
  no-non-null-assertion: off
  no-var: warn
  no-empty: warn
  no-empty-function: [warn, { allow: [constructors] }]
  no-cond-assign: [error, always]
  no-unused-vars: off
  prefer-const: warn
  comma-style: [warn, last]
  comma-dangle: [warn, {
      arrays: always-multiline, objects: always-multiline,
      imports: always-multiline, exports: always-multiline,
      functions: always-multiline,
  }]
  semi: [warn, never]
  semi-spacing: [warn, { before: false, after: true }]
  quotes: [warn, double]
  max-lines: [warn, { max: 800, skipBlankLines: false, skipComments: false }]
  indent: [warn, 4, {
      SwitchCase: 1,
      VariableDeclarator: 1,
      outerIIFEBody: 1,
      MemberExpression: 1,
      FunctionDeclaration: { parameters: 1, body: 1 },
      FunctionExpression: { parameters: 1, body: 1 },
      StaticBlock: { body: 1 },
      CallExpression: { arguments: 1 },
      ArrayExpression: 1,
      ObjectExpression: 1,
      ImportDeclaration: 1,
      flatTernaryExpressions: false,
      offsetTernaryExpressions: false,
      ignoreComments: false,
  }]
  linebreak-style: [warn, unix]
  sort-imports: [warn, {
      ignoreCase: false,
      ignoreDeclarationSort: false,
      ignoreMemberSort: false,
      memberSyntaxSortOrder: [none, all, multiple, single],
  }]
  "@typescript-eslint/restrict-template-expressions": off
  "@typescript-eslint/no-unused-vars": [warn, { argsIgnorePattern: "^_" }]
